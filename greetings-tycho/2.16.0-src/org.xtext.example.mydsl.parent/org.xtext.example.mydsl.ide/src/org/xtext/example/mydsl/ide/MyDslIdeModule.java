/*
 * generated by Xtext 2.16.0-SNAPSHOT
 */
package org.xtext.example.mydsl.ide;

import org.eclipse.xtext.ide.editor.contentassist.IPrefixMatcher;
import org.eclipse.xtext.ide.editor.contentassist.IProposalConflictHelper;
import org.eclipse.xtext.ide.editor.contentassist.antlr.IContentAssistParser;
import org.eclipse.xtext.ide.refactoring.IRenameStrategy2;
import org.eclipse.xtext.ide.server.rename.IRenameService;
import org.eclipse.xtext.workspace.IProjectConfigProvider;

import com.google.inject.Binder;

/**
 * Use this class to register ide components.
 */
public class MyDslIdeModule extends AbstractMyDslIdeModule {

	@Override
	public void configureContentAssistLexer(Binder binder) {
		super.configureContentAssistLexer(binder);
	}

	@Override
	public Class<? extends IContentAssistParser> bindIContentAssistParser() {
		return super.bindIContentAssistParser();
	}

	@Override
	public Class<? extends IProposalConflictHelper> bindIProposalConflictHelper() {
		return super.bindIProposalConflictHelper();
	}

	@Override
	public Class<? extends IPrefixMatcher> bindIPrefixMatcher() {
		return super.bindIPrefixMatcher();
	}

	@Override
	public Class<? extends IRenameService> bindIRenameService() {
		return super.bindIRenameService();
	}

	@Override
	public Class<? extends IRenameStrategy2> bindIRenameStrategy2() {
		return super.bindIRenameStrategy2();
	}

	@Override
	public void configureExecutorService(Binder binder) {
		super.configureExecutorService(binder);
	}

	@Override
	public void configureIResourceDescriptionsLiveScope(Binder binder) {
		super.configureIResourceDescriptionsLiveScope(binder);
	}

	@Override
	public Class<? extends IProjectConfigProvider> bindIProjectConfigProvider() {
		return super.bindIProjectConfigProvider();
	}
	
}
